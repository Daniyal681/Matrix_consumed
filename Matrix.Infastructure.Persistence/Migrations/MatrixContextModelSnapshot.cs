// <auto-generated />
using System;
using Matrix.Infastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Matrix.Infastructure.Persistence.Migrations
{
    [DbContext(typeof(MatrixContext))]
    partial class MatrixContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblAreas", b =>
                {
                    b.Property<int>("AreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaID"));

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.HasKey("AreaID");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            AreaID = 1,
                            AreaCode = "001",
                            AreaName = "East",
                            IsActive = 2,
                            OrderBy = 1
                        },
                        new
                        {
                            AreaID = 2,
                            AreaCode = "002",
                            AreaName = "West",
                            IsActive = 2,
                            OrderBy = 2
                        },
                        new
                        {
                            AreaID = 3,
                            AreaCode = "003",
                            AreaName = "North",
                            IsActive = 2,
                            OrderBy = 3
                        },
                        new
                        {
                            AreaID = 4,
                            AreaCode = "004",
                            AreaName = "South",
                            IsActive = 2,
                            OrderBy = 4
                        });
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblBank", b =>
                {
                    b.Property<int>("BankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankID"));

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.HasKey("BankID");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            BankID = 1,
                            BankName = "Meezan Bank",
                            IsActive = 2
                        },
                        new
                        {
                            BankID = 2,
                            BankName = "Habib Metro",
                            IsActive = 2
                        },
                        new
                        {
                            BankID = 3,
                            BankName = "Bank Alfalah",
                            IsActive = 2
                        },
                        new
                        {
                            BankID = 4,
                            BankName = "Habib Bank",
                            IsActive = 2
                        },
                        new
                        {
                            BankID = 5,
                            BankName = "Muslim Commercial Bank Limited",
                            IsActive = 2
                        },
                        new
                        {
                            BankID = 6,
                            BankName = "National Bank of Pakistan",
                            IsActive = 2
                        },
                        new
                        {
                            BankID = 7,
                            BankName = "Allied Bank Limited",
                            IsActive = 2
                        },
                        new
                        {
                            BankID = 8,
                            BankName = "Faisal Bank",
                            IsActive = 2
                        });
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblBrands", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandID"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.HasKey("BrandID");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandID = 1,
                            BrandName = "Infinix",
                            IsActive = 2
                        },
                        new
                        {
                            BrandID = 2,
                            BrandName = "Realme",
                            IsActive = 2
                        },
                        new
                        {
                            BrandID = 3,
                            BrandName = "Samsung",
                            IsActive = 2
                        },
                        new
                        {
                            BrandID = 4,
                            BrandName = "Dell",
                            IsActive = 2
                        },
                        new
                        {
                            BrandID = 5,
                            BrandName = "Sony",
                            IsActive = 2
                        },
                        new
                        {
                            BrandID = 6,
                            BrandName = "Itel",
                            IsActive = 2
                        },
                        new
                        {
                            BrandID = 7,
                            BrandName = "Tecno",
                            IsActive = 2
                        },
                        new
                        {
                            BrandID = 8,
                            BrandName = "Huawei",
                            IsActive = 2
                        },
                        new
                        {
                            BrandID = 9,
                            BrandName = "Nokia",
                            IsActive = 2
                        },
                        new
                        {
                            BrandID = 10,
                            BrandName = "OtherBrands",
                            IsActive = 2
                        });
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblCustomer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddIncentive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agreement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AreaID")
                        .HasColumnType("int");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cluster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlAccountID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditLimit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailAccountID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expiry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("KickbackAllowed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KickbackMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NTN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrincipleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrincipleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecIncentive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STRN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPersonID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.HasIndex("AreaID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblCustomerBrands", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecID"));

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.HasKey("RecID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CustomerID");

                    b.ToTable("tblCustomerBrands");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblLocalPurchase", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecID"));

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<decimal>("Others")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<string>("SupplierInvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RecID");

                    b.HasIndex("SupplierID");

                    b.ToTable("LocalPurchase");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblLocalPurchaseDetails", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LocalPurchaseID")
                        .HasColumnType("int");

                    b.Property<int>("ModelID")
                        .HasColumnType("int");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.HasKey("RecID");

                    b.HasIndex("LocalPurchaseID");

                    b.HasIndex("ModelID");

                    b.HasIndex("WareHouseID");

                    b.ToTable("LocalPurchaseDetails");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblMenuList", b =>
                {
                    b.Property<int>("MenuListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuListId"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("MenuListDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MenuListHasChildren")
                        .HasColumnType("bit");

                    b.Property<string>("MenuListIconClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuListNavigationUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuListParentId")
                        .HasColumnType("int");

                    b.Property<int?>("MenuListSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("MenuListTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuListId");

                    b.ToTable("MenuList");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblModels", b =>
                {
                    b.Property<int>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelID"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModelID");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            ModelID = 1,
                            IsActive = 2,
                            ModelName = "3310"
                        },
                        new
                        {
                            ModelID = 2,
                            IsActive = 2,
                            ModelName = "C3"
                        },
                        new
                        {
                            ModelID = 3,
                            IsActive = 2,
                            ModelName = "Note-30"
                        },
                        new
                        {
                            ModelID = 4,
                            IsActive = 2,
                            ModelName = "Camon-30"
                        });
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblSalesInvoice", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("RecID");

                    b.ToTable("SalesInvoice");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblSuppliers", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierID = 1,
                            IsActive = 2,
                            SupplierName = "Taha"
                        },
                        new
                        {
                            SupplierID = 2,
                            IsActive = 2,
                            SupplierName = "Aaqib"
                        },
                        new
                        {
                            SupplierID = 3,
                            IsActive = 2,
                            SupplierName = "Sahil"
                        },
                        new
                        {
                            SupplierID = 4,
                            IsActive = 2,
                            SupplierName = "Daniyal"
                        });
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblTradeWarranty", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecID"));

                    b.Property<double>("CashBack")
                        .HasColumnType("float");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("ModelID")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WarrantyFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WarrantyPeriod")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WarrantyUpto")
                        .HasColumnType("datetime2");

                    b.HasKey("RecID");

                    b.HasIndex("ModelID");

                    b.ToTable("TradeWarranty");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblTradeWarrantyDetails", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ModelID")
                        .HasColumnType("int");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TradeWarrantyID")
                        .HasColumnType("int");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.Property<int?>("tblTradeWarrantyRecID")
                        .HasColumnType("int");

                    b.HasKey("RecID");

                    b.HasIndex("ModelID");

                    b.HasIndex("TradeWarrantyID");

                    b.HasIndex("WareHouseID");

                    b.HasIndex("tblTradeWarrantyRecID");

                    b.ToTable("tblTradeWarrantyDetails");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("UserLoginID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblWareHouse", b =>
                {
                    b.Property<int>("WareHouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WareHouseID"));

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("WareHouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WareHouseID");

                    b.ToTable("WareHouses");

                    b.HasData(
                        new
                        {
                            WareHouseID = 1,
                            IsActive = 2,
                            WareHouseName = "WH-1"
                        },
                        new
                        {
                            WareHouseID = 2,
                            IsActive = 2,
                            WareHouseName = "WH-2"
                        },
                        new
                        {
                            WareHouseID = 3,
                            IsActive = 2,
                            WareHouseName = "WH-3"
                        },
                        new
                        {
                            WareHouseID = 4,
                            IsActive = 2,
                            WareHouseName = "WH-4"
                        });
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblWareHouseInHoldProducts", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecID"));

                    b.Property<int>("ModelID")
                        .HasColumnType("int");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.HasKey("RecID");

                    b.HasIndex("ModelID");

                    b.HasIndex("WareHouseID");

                    b.ToTable("WareHouseInHoldProducts");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblCustomer", b =>
                {
                    b.HasOne("Matrix.Core.Domain.Entities.tblAreas", "Area")
                        .WithMany("Customers")
                        .HasForeignKey("AreaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblCustomerBrands", b =>
                {
                    b.HasOne("Matrix.Core.Domain.Entities.tblBrands", "Brands")
                        .WithMany("CustomerBrands")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Core.Domain.Entities.tblCustomer", "Customer")
                        .WithMany("CustomerBrands")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brands");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblLocalPurchase", b =>
                {
                    b.HasOne("Matrix.Core.Domain.Entities.tblSuppliers", "SupplierDetails")
                        .WithMany("LocalPurchase")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupplierDetails");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblLocalPurchaseDetails", b =>
                {
                    b.HasOne("Matrix.Core.Domain.Entities.tblLocalPurchase", "LocalPurchase")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("LocalPurchaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Core.Domain.Entities.tblModels", "DeviceModel")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Core.Domain.Entities.tblWareHouse", "WareHouse")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("WareHouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceModel");

                    b.Navigation("LocalPurchase");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblTradeWarranty", b =>
                {
                    b.HasOne("Matrix.Core.Domain.Entities.tblModels", "ModelDetails")
                        .WithMany()
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelDetails");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblTradeWarrantyDetails", b =>
                {
                    b.HasOne("Matrix.Core.Domain.Entities.tblModels", "DeviceModel")
                        .WithMany()
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Core.Domain.Entities.tblLocalPurchase", "LocalPurchase")
                        .WithMany()
                        .HasForeignKey("TradeWarrantyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Core.Domain.Entities.tblWareHouse", "WareHouse")
                        .WithMany()
                        .HasForeignKey("WareHouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Core.Domain.Entities.tblTradeWarranty", null)
                        .WithMany("TradeWarrantyDetails")
                        .HasForeignKey("tblTradeWarrantyRecID");

                    b.Navigation("DeviceModel");

                    b.Navigation("LocalPurchase");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblWareHouseInHoldProducts", b =>
                {
                    b.HasOne("Matrix.Core.Domain.Entities.tblModels", "Model")
                        .WithMany("WareHouseInHoldProducts")
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Matrix.Core.Domain.Entities.tblWareHouse", "WareHouse")
                        .WithMany("WareHouseInHoldProducts")
                        .HasForeignKey("WareHouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblAreas", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblBrands", b =>
                {
                    b.Navigation("CustomerBrands");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblCustomer", b =>
                {
                    b.Navigation("CustomerBrands");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblLocalPurchase", b =>
                {
                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblModels", b =>
                {
                    b.Navigation("PurchaseDetails");

                    b.Navigation("WareHouseInHoldProducts");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblSuppliers", b =>
                {
                    b.Navigation("LocalPurchase");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblTradeWarranty", b =>
                {
                    b.Navigation("TradeWarrantyDetails");
                });

            modelBuilder.Entity("Matrix.Core.Domain.Entities.tblWareHouse", b =>
                {
                    b.Navigation("PurchaseDetails");

                    b.Navigation("WareHouseInHoldProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
